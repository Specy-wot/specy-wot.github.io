{"version":3,"sources":["Components/skin.js","Components/SkinContainer.js","Components/mainPage.js","Components/secondPage.js","Components/thirdPage.js","Components/fourthPage.js","index.js"],"names":["Skin","props","toggleName","setState","nameShown","hideName","state","skin","type","addSkin","bind","removeSkin","skinName","this","isGallery","className","onMouseOver","onMouseLeave","onClick","src","alt","Component","SkinContainer","getPage","skins","length","dontRandomize","i","skinsPerPage","currentIndex","push","search","random","Math","floor","randomSkin","splice","id","elId","dataLength","hasMore","scrollThreshold","next","scrollableTarget","map","MainPage","updateSeries","e","currentSearch","target","value","toLowerCase","placeholder","onBlur","searchName","SecondPage","ThirdPage","FourthPage","handleFocus","select","export","localStorage","getItem","JSON","parse","exportedSkins","join","handleInputChange","importedSkins","sendSkinArr","skinText","split","importSkinArr","alert","readOnly","onChange","App","getSkins","a","localStorageSkins","loading","fetch","then","data","json","names","setItem","stringify","console","log","addskin","parentElement","querySelector","innerText","savedSkins","includes","skinArr","forEach","index","indexOf","allSkins","regExp","RegExp","filter","test","sort","b","localeCompare","navigator","languages","language","numeric","ignorePunctuation","searchSkin","searchSkins","changePageIndex","pageIndex","navClass","selNav","onChangeIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4280de70.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass Skin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skin: this.props.skin,\r\n            nameShown: false,\r\n        }\r\n\r\n        if (this.props.type === \"gallery\") {\r\n            this.addSkin = this.props.addSkin.bind(this, this.props.skin)\r\n        } else {\r\n            this.removeSkin = this.props.removeSkin.bind(this, this.props.skin)\r\n        }\r\n    }\r\n    toggleName = () => {\r\n        this.setState({\r\n            nameShown: true,\r\n        })\r\n    }\r\n    hideName = () => {\r\n        this.setState({\r\n            nameShown: false,\r\n        })\r\n    }\r\n    render() {\r\n        let skinName = this.props.skin\r\n        let skin = \"https://gamedata.gota.io/skins/\" + skinName + \".png\"\r\n        let isGallery = this.props.type === \"gallery\"\r\n        return (\r\n            <div\r\n                className=\"skinWrapper\"\r\n                onMouseOver={this.toggleName}\r\n                onMouseLeave={this.hideName}\r\n                onClick={this.toggleName}\r\n            >\r\n                <div className={this.state.nameShown ? \"skinText\" : \"skinText hidden\"}>\r\n                    {skinName}\r\n                </div>\r\n                <img src={skin} alt={skinName} className=\"skinImg\"></img>\r\n                <div className=\"buttonsHolder\">\r\n                    <button\r\n                        className={isGallery ? \"skinBtn green\" : \"skinBtn red\"}\r\n                        onClick={isGallery ? this.props.addSkin : this.props.removeSkin}\r\n                    >\r\n                        {isGallery ? \"+\" : \"-\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skin\r\n","import React, { Component } from 'react'\r\nimport Skin from \"./skin\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nclass SkinContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.skinsPerPage = 20\r\n        this.state = {\r\n            skins: [],\r\n            search: \"\"\r\n        }\r\n        this.currentIndex = 0\r\n    }\r\n    getPage = () => {\r\n        let skins = this.state.skins\r\n        if(this.props.skins.length === 0) return\r\n        if(this.props.dontRandomize){\r\n            for (let i = 0; i < this.skinsPerPage; i++) {\r\n                if(this.currentIndex + 1 > this.props.skins.length) break\r\n                this.state.skins.push(this.props.skins[this.currentIndex])\r\n                this.currentIndex++\r\n            }\r\n            this.setState({\r\n                skins: this.state.skins,\r\n                search: this.props.search\r\n            })\r\n            return\r\n        }\r\n        for(let i = 0; i<this.skinsPerPage; i++){\r\n            let random = Math.floor(Math.random() * this.props.skins.length)\r\n            this.currentIndex++\r\n            if (this.props.skins.length === 0) break\r\n            let randomSkin = this.props.skins[random]\r\n            this.props.skins.splice(random,1)\r\n            skins.push(randomSkin)\r\n        }\r\n\r\n        this.setState({\r\n            skins: skins,\r\n            search: this.props.search\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.skins.length === 0) this.getPage()\r\n        //if(this.state.search !== this.props.search) this.getPage()\r\n\r\n        return(\r\n                <div id={this.props.elId}   className=\"skinsHolder  scroll-bar\">\r\n                    <InfiniteScroll\r\n                        className=\"infiniteScroll\"\r\n                        dataLength={this.state.skins.length}\r\n                        hasMore={true}\r\n                        scrollThreshold= {0.99}\r\n                        next={this.getPage}\r\n                        scrollableTarget={this.props.elId}\r\n                    >\r\n                        {this.state.skins.map((skin,i) => {\r\n                            return <Skin \r\n                                skin={skin}\r\n                                key={skin+\"_key\"+i}\r\n                                type={this.props.type}\r\n                                addSkin={this.props.addSkin}\r\n                                removeSkin={this.props.removeSkin}\r\n                            />\r\n\r\n                        })}\r\n                    </InfiniteScroll>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkinContainer","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentSearch: \"\"\r\n        }\r\n    }\r\n    updateSeries = (e) => {\r\n        this.setState({\r\n            currentSearch: e.target.value.toLowerCase()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view\">\r\n                <div className=\"series\">\r\n                    <div className=\"searchRow\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"searchInput wm-L1\"\r\n                            placeholder=\"Skin name\"\r\n                            onBlur={this.updateSeries}\r\n                        />\r\n                        <button\r\n                            className=\"searchBtn wm-L1\"\r\n                            onClick={this.props.search.bind(this, this.state.currentSearch)}\r\n                        >\r\n                            🔍\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <SkinContainer\r\n                    dontRandomize={true}\r\n                    search={this.props.searchName}\r\n                    elId={\"search\"}\r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass SecondPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"view\">\r\n                <div className=\"title\">Gallery</div>\r\n                <SkinContainer\r\n                    elId={\"gallery\"}\r\n                    search=\"\"\r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass ThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"title\">Your skins</div>\r\n                <SkinContainer \r\n                    elId={\"savedSkins\"}\r\n                    search=\"\" \r\n                    type={this.props.type}\r\n                    addSkin={this.props.addSkin}\r\n                    skins={this.props.skins}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThirdPage","import React, { Component } from 'react'\r\nclass FourthPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            exportedSkins: \"\",\r\n            importedSkins:\"\"\r\n        }\r\n    }\r\n    handleFocus = (e) => e.target.select();\r\n    export = () =>{\r\n        let skins = localStorage.getItem(\"savedSkins\")\r\n        skins = skins === null ? [] : JSON.parse(skins)\r\n        this.setState({\r\n            exportedSkins: skins.join(\",\")\r\n        })\r\n        \r\n    }\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            importedSkins: e.target.value\r\n        })\r\n    }\r\n    sendSkinArr = () => {\r\n        let skinText = this.state.importedSkins\r\n        if(skinText === \"\"){\r\n            alert(\"Write some skins first!\")\r\n            return\r\n        }\r\n        let skins = skinText.split(\",\")\r\n        this.props.importSkinArr(skins)\r\n        this.setState({\r\n            importedSkins:\"\"\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n\r\n            <div className=\"view\">\r\n                <div className=\"importExport\">\r\n                    <div className=\"inputColumn\">\r\n                        <button className=\"button green imexBtn\" onClick={this.export}>Export saved skins</button>\r\n                        <textarea placeholder=\"Your skins will be here\"\r\n                            onClick={this.handleFocus}\r\n                            className=\"skinsInput wm-L2\"\r\n                            value={this.state.exportedSkins} \r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                    <div className=\"inputColumn\">\r\n                        <button className=\"button darkTeal imexBtn\" onClick={this.sendSkinArr}>Import skins</button>\r\n                        <textarea placeholder=\"Write skins to import here separated by a comma, example: skin1,skin2,skin3\"\r\n                            className=\"skinsInput wm-L2\"\r\n                            onChange={this.handleInputChange}\r\n                            value={this.state.importedSkins}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FourthPage","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport './specy.css';\nimport './index.css';\nimport Mainpage from './Components/mainPage'\nimport SecondPage from './Components/secondPage'\nimport ThirdPage from './Components/thirdPage'\nimport FourthPage from './Components/fourthPage';\nclass App extends Component {\n  constructor() {\n    super()\n    let savedSkins = localStorage.getItem(\"savedSkins\") === null ? [] : JSON.parse(localStorage.getItem(\"savedSkins\"))\n    this.state = {\n      loading: true,\n      skins: [],\n      pageIndex: 0,\n      savedSkins: savedSkins,\n      searchSkin: \"\",\n      searchSkins: []\n    }\n\n  }\n  componentDidMount() {\n    this.getSkins()\n  }\n  getSkins = async () => {\n    let skins = []\n    let localStorageSkins = localStorage.getItem(\"gameSkins\")\n    localStorageSkins = localStorageSkins === null ? [] : JSON.parse(localStorageSkins)\n    if (localStorageSkins.length !== 0) {\n      this.setState({\n        skins: localStorageSkins,\n        loading: false\n      })\n    } else {\n      skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n      skins = JSON.parse(skins.names)\n      this.setState({\n        skins: skins,\n        loading: false\n      })\n    }\n    skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n    skins = JSON.parse(skins.names)\n    if (skins.length > localStorageSkins.length) {\n      localStorage.setItem(\"gameSkins\", JSON.stringify(skins))\n      console.log(\"updated\")\n    }\n  }\n  addskin = (skin) => {\n    skin = skin.target.parentElement.parentElement.querySelector(\".skinText\").innerText\n    let skins = this.state.savedSkins\n    if (skins.includes(skin)) return\n    skins.push(skin)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  importSkinArr = (skinArr) => {\n    let skins = this.state.savedSkins\n    skinArr.forEach(skin => {\n      if (!skins.includes(skin)) skins.push(skin)\n    })\n    this.setState({\n      savedSkins: skins\n    })\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  removeSkin = (skin) => {\n    skin = skin.target.parentElement.parentElement.querySelector(\".skinText\").innerText\n    let skins = this.state.savedSkins\n    let index = skins.indexOf(skin)\n    if (index === -1) return\n    skins.splice(index, 1)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  search = (skinName) => {\n    if (skinName.length === \"\") return\n    let allSkins = this.state.skins\n    let regExp = new RegExp(\"^\\\\d*\" + skinName + \"\\\\d*$\")\n    allSkins = allSkins.filter(skin => regExp.test(skin))\n\n    //I have no idea what this does\n    allSkins.sort((a, b) => a.localeCompare(b, navigator.languages[0] || navigator.language, { numeric: true, ignorePunctuation: true }))\n    this.setState({\n      searchSkin: skinName,\n      searchSkins: allSkins\n    })\n  }\n  changePageIndex = (index) => {\n    this.setState({\n      pageIndex: index,\n    });\n  };\n  render() {\n    let navClass = \"navItem dm-L1\"\n    let selNav = \"navItem selectedTab\"\n    let index = this.state.pageIndex\n    return (\n      <div>\n        <div className=\"navbar dm-L3\">\n          <button className={index === 0 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 0)}>Discover</button>\n          <button className={index === 1 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 1)}>Gallery</button>\n          <button className={index === 2 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 2)}>Your skins</button>\n          <button className={index === 3 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 3)}>Other</button>\n        </div>\n        {this.state.loading ? <div className=\"title text-white\">Loading...</div> : <div></div>}\n        <SwipeableViews index={index} onChangeIndex={this.changePageIndex} className=\"slider\">\n          <Mainpage\n            skins={this.state.searchSkins}\n            search={this.search}\n            key={this.state.searchSkin}\n            searchName={this.state.searchSkin}\n            addSkin={this.addskin} type=\"gallery\"\n          />\n          <SecondPage\n            skins={this.state.skins}\n            addSkin={this.addskin}\n            type=\"gallery\"\n          />\n          <ThirdPage\n            skins={[...this.state.savedSkins]}\n            key={this.state.savedSkins.length}\n            removeSkin={this.removeSkin}\n            type=\"savedSkins\" />\n          <FourthPage\n            importSkinArr={this.importSkinArr}\n          />\n        </SwipeableViews>\n      </div>\n\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(< App />, document.getElementById(\"root\"));"],"sourceRoot":""}