{"version":3,"sources":["Components/skin.js","Components/SkinContainer.js","Components/mainPage.js","Components/secondPage.js","Components/thirdPage.js","Components/fourthPage.js","index.js"],"names":["Skin","props","toggleName","setState","nameShown","hideName","state","skin","type","addSkin","bind","removeSkin","skinName","this","isGallery","className","onMouseOver","onMouseLeave","onClick","src","alt","Component","SkinContainer","getPage","skins","length","skinsPerPage","search","dontRandomize","i","random","Math","floor","currentIndex","randomSkin","push","id","elId","dataLength","hasMore","next","scrollableTarget","map","MainPage","updateSeries","e","currentSearch","target","value","toLowerCase","placeholder","onBlur","searchName","SecondPage","ThirdPage","FourthPage","handleFocus","select","export","localStorage","getItem","JSON","parse","exportedSkins","join","handleInputChange","importedSkins","sendSkinArr","skinText","split","importSkinArr","alert","readOnly","onChange","App","getSkins","a","localStorageSkins","loading","fetch","then","data","json","names","setItem","stringify","console","log","addskin","parentElement","querySelector","innerText","savedSkins","includes","skinArr","forEach","index","indexOf","splice","allSkins","regExp","RegExp","filter","test","sort","b","localeCompare","navigator","languages","language","numeric","ignorePunctuation","searchSkin","searchSkins","changePageIndex","pageIndex","navClass","selNav","onChangeIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7684125c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Skin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skin : this.props.skin,\r\n            nameShown: false\r\n        }\r\n        if(this.props.type === \"gallery\"){\r\n            this.addSkin = this.props.addSkin.bind(this,  this.props.skin)\r\n        }else{\r\n            this.removeSkin = this.props.removeSkin.bind(this,  this.props.skin)\r\n        }\r\n\r\n    }\r\n    toggleName = () =>{\r\n        this.setState({\r\n            nameShown:true\r\n        })\r\n    }\r\n    hideName = () =>{\r\n        this.setState({\r\n            nameShown:false\r\n        })\r\n    }\r\n    render() {\r\n        let skinName = this.props.skin\r\n        let skin = \"https://gamedata.gota.io/skins/\"+skinName+\".png\"\r\n        let isGallery = this.props.type === \"gallery\"\r\n        return(\r\n            <div className=\"skinWrapper\" onMouseOver={this.toggleName} onMouseLeave={this.hideName} onClick={this.toggleName}>\r\n                <div className={this.state.nameShown ? \"skinText\" : \"skinText hidden\"}>\r\n                    {skinName}\r\n                </div>\r\n                <img src={skin} alt={skinName}className=\"skinImg\"></img>\r\n                <div className=\"buttonsHolder\">\r\n                    <button \r\n                    className={isGallery ? \"skinBtn green\" : \"skinBtn red\"} \r\n                    onClick={isGallery ? this.props.addSkin : this.props.removeSkin}\r\n                    >\r\n                        {isGallery ? \"+\" : \"-\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skin","import React, { Component } from 'react'\r\nimport Skin from \"./skin\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nclass SkinContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.skinsPerPage = 20\r\n        this.state = {\r\n            skins: [],\r\n            search: \"\"\r\n        }\r\n        this.currentIndex = 0\r\n    }\r\n    getPage = () => {\r\n        let skins = this.state.skins\r\n        if(this.props.skins.length === 0) return\r\n        if(this.props.skins.length < this.skinsPerPage){\r\n            this.setState({\r\n                skins: this.props.skins,\r\n                search: this.props.search\r\n            })\r\n            return\r\n        }\r\n        if(this.props.dontRandomize){\r\n            this.setState({\r\n                skins: this.props.skins,\r\n                search: this.props.search\r\n            })\r\n            return\r\n        }\r\n        for(let i = 0; i<this.skinsPerPage; i++){\r\n            let random = Math.floor(Math.random() * this.props.skins.length)\r\n            this.currentIndex++\r\n            let randomSkin = this.props.skins[random]\r\n            skins.push(randomSkin)\r\n        }\r\n        this.setState({\r\n            skins: skins,\r\n            search: this.props.search\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.skins.length === 0) this.getPage()\r\n        if(this.state.search !== this.props.search) this.getPage()\r\n\r\n        return(\r\n                <div id={this.props.elId}   className=\"skinsHolder  scroll-bar\">\r\n                    <InfiniteScroll\r\n                        className=\"infiniteScroll\"\r\n                        dataLength={this.state.skins.length}\r\n                        hasMore={true}\r\n                        next={this.getPage}\r\n                        scrollableTarget={this.props.elId}\r\n                    >\r\n                        {this.state.skins.map((skin,i) => {\r\n                            return <Skin \r\n                                skin={skin}\r\n                                key={i}\r\n                                type={this.props.type}\r\n                                addSkin={this.props.addSkin}\r\n                                removeSkin={this.props.removeSkin}\r\n                            />\r\n\r\n                        })}\r\n                    </InfiniteScroll>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkinContainer","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentSearch:\"\"\r\n        }\r\n    }\r\n    updateSeries = (e) => {\r\n        this.setState({\r\n            currentSearch: e.target.value.toLowerCase()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"series\">\r\n                    <div className=\"searchRow\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"searchInput wm-L1\" \r\n                            placeholder=\"Skin name\" \r\n                            onBlur={this.updateSeries}\r\n                        />\r\n                        <button \r\n                            className=\"searchBtn wm-L1\"\r\n                            onClick={this.props.search.bind(this,this.state.currentSearch)}\r\n                        >\r\n                            🔍\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <SkinContainer\r\n                    dontRandomize={true}\r\n                    search={this.props.searchName}\r\n                    elId={\"search\"} \r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass SecondPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"title\">Gallery</div>\r\n                <SkinContainer \r\n                    elId={\"gallery\"} \r\n                    search=\"\"\r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass ThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"title\">Your skins</div>\r\n                <SkinContainer \r\n                    elId={\"savedSkins\"}\r\n                    search=\"\" \r\n                    type={this.props.type}\r\n                    addSkin={this.props.addSkin}\r\n                    skins={this.props.skins}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThirdPage","import React, { Component } from 'react'\r\nclass FourthPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            exportedSkins: \"\",\r\n            importedSkins:\"\"\r\n        }\r\n    }\r\n    handleFocus = (e) => e.target.select();\r\n    export = () =>{\r\n        let skins = localStorage.getItem(\"savedSkins\")\r\n        skins = skins === null ? [] : JSON.parse(skins)\r\n        this.setState({\r\n            exportedSkins: skins.join(\",\")\r\n        })\r\n        \r\n    }\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            importedSkins: e.target.value\r\n        })\r\n    }\r\n    sendSkinArr = () => {\r\n        let skinText = this.state.importedSkins\r\n        if(skinText === \"\"){\r\n            alert(\"Write some skins first!\")\r\n            return\r\n        }\r\n        let skins = skinText.split(\",\")\r\n        this.props.importSkinArr(skins)\r\n        this.setState({\r\n            importedSkins:\"\"\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n\r\n            <div className=\"view\">\r\n                <div className=\"importExport\">\r\n                    <div className=\"inputColumn\">\r\n                        <button className=\"button green imexBtn\" onClick={this.export}>Export saved skins</button>\r\n                        <textarea placeholder=\"Your skins will be here\"\r\n                            onClick={this.handleFocus}\r\n                            className=\"skinsInput wm-L2\"\r\n                            value={this.state.exportedSkins} \r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                    <div className=\"inputColumn\">\r\n                        <button className=\"button darkTeal imexBtn\" onClick={this.sendSkinArr}>Import skins</button>\r\n                        <textarea placeholder=\"Write skins to import here separated by a comma, example: skin1,skin2,skin3\"\r\n                            className=\"skinsInput wm-L2\"\r\n                            onChange={this.handleInputChange}\r\n                            value={this.state.importedSkins}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FourthPage","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport './specy.css';\nimport './index.css';\nimport Mainpage from './Components/mainPage'\nimport SecondPage from './Components/secondPage'\nimport ThirdPage from './Components/thirdPage'\nimport FourthPage from './Components/fourthPage';\nclass App extends Component {\n  constructor() {\n    super()\n    let savedSkins = localStorage.getItem(\"savedSkins\") === null ? [] : JSON.parse(localStorage.getItem(\"savedSkins\"))\n    this.state = {\n      loading:true,\n      skins: [],\n      pageIndex: 0,\n      savedSkins: savedSkins,\n      searchSkin: \"\",\n      searchSkins: []\n    }\n    \n  }\n  componentDidMount() {\n    this.getSkins()\n  }\n  getSkins = async () => {\n    let skins = []\n    let localStorageSkins = localStorage.getItem(\"gameSkins\")\n    localStorageSkins = localStorageSkins === null ? [] : JSON.parse(localStorageSkins)\n    if(localStorageSkins.length !== 0){\n      this.setState({\n        skins: localStorageSkins,\n        loading:false\n      })\n    }else{\n      skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n      skins = JSON.parse(skins.names)\n      this.setState({\n        skins: skins,\n        loading:false\n      })\n    }\n    skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n    skins = JSON.parse(skins.names)\n    if(skins.length > localStorageSkins.length){\n      localStorage.setItem(\"gameSkins\",JSON.stringify(skins))\n      console.log(\"updated\")\n    }\n  }\n  addskin = (skin) => {\n    skin = skin.target.parentElement.parentElement.querySelector(\".skinText\").innerText\n    let skins = this.state.savedSkins\n    if(skins.includes(skin)) return\n    skins.push(skin)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  importSkinArr = (skinArr) => {\n    let skins = this.state.savedSkins\n    skinArr.forEach(skin => {\n      if(!skins.includes(skin)) skins.push(skin)\n    })\n    this.setState({\n      savedSkins:skins\n    })\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  removeSkin = (skin) => {\n    skin = skin.target.parentElement.parentElement.querySelector(\".skinText\").innerText\n    let skins = this.state.savedSkins\n    let index = skins.indexOf(skin)\n    if(index === -1) return\n    skins.splice(index, 1)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  search = (skinName) => {\n    if(skinName.length === \"\") return\n    let allSkins = this.state.skins\n    let regExp = new RegExp(\"^\\\\d*\"+skinName+\"\\\\d*$\")\n    allSkins = allSkins.filter(skin => regExp.test(skin))\n\n    //I have no idea what this does\n    allSkins.sort((a, b) => a.localeCompare(b, navigator.languages[0] || navigator.language, {numeric: true, ignorePunctuation: true}))\n    this.setState({\n      searchSkin: skinName,\n      searchSkins: allSkins\n    })\n  }\n  changePageIndex = (index) => {\n    this.setState({\n      pageIndex: index,\n    });\n  };\n  render() {\n    let navClass = \"navItem dm-L1\"\n    let selNav = \"navItem selectedTab\"\n    let index = this.state.pageIndex\n    return (\n      <div>\n        <div className=\"navbar dm-L3\">\n          <button className={index === 0 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 0)}>Discover</button>\n          <button className={index === 1 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 1)}>Gallery</button>\n          <button className={index === 2 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 2)}>Your skins</button>\n          <button className={index === 3 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 3)}>Other</button>\n        </div>\n        {this.state.loading ? <div className=\"title text-white\">Loading...</div>: <div></div>}\n        <SwipeableViews index={index} onChangeIndex={this.changePageIndex} className=\"slider\">\n          <Mainpage skins={this.state.searchSkins} search={this.search} searchName={this.state.searchSkin} addSkin={this.addskin} type=\"gallery\" />\n          <SecondPage skins={this.state.skins} addSkin={this.addskin} type=\"gallery\" />\n          <ThirdPage skins={this.state.savedSkins} removeSkin={this.removeSkin} type=\"savedSkins\" />\n          <FourthPage  importSkinArr={this.importSkinArr} />\n        </SwipeableViews>\n      </div>\n\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(< App />, document.getElementById(\"root\"));"],"sourceRoot":""}