{"version":3,"sources":["Components/skin.js","Components/SkinContainer.js","Components/mainPage.js","Components/secondPage.js","Components/thirdPage.js","index.js"],"names":["Skin","props","toggleName","setState","nameShown","hideName","state","skin","type","addSkin","bind","removeSkin","skinName","this","isGallery","className","onMouseOver","onMouseLeave","onClick","src","Component","SkinContainer","getPage","skins","length","skinsPerPage","search","dontRandomize","i","random","Math","floor","currentIndex","randomSkin","push","id","elId","dataLength","hasMore","next","scrollableTarget","map","MainPage","updateSeries","e","currentSearch","target","value","toLowerCase","placeholder","onBlur","searchName","SecondPage","ThirdPage","App","getSkins","a","localStorageSkins","localStorage","getItem","JSON","parse","loading","fetch","then","data","json","names","setItem","stringify","console","log","addskin","savedSkins","includes","index","indexOf","splice","filter","searchSkin","searchSkins","changePageIndex","pageIndex","navClass","selNav","onChangeIndex","ReactDOM","render","document","getElementById"],"mappings":"6RAiDeA,E,kDA9CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,WAAa,WACT,EAAKC,SAAS,CACVC,WAAU,KAfC,EAkBnBC,SAAW,WACP,EAAKF,SAAS,CACVC,WAAU,KAlBd,EAAKE,MAAQ,CACTC,KAAO,EAAKN,MAAMM,KAClBH,WAAW,GAEQ,YAApB,EAAKH,MAAMO,KACV,EAAKC,QAAU,EAAKR,MAAMQ,QAAQC,KAAnB,eAA8B,EAAKJ,MAAMC,MAExD,EAAKI,WAAa,EAAKV,MAAMU,WAAWD,KAAtB,eAAiC,EAAKJ,MAAMC,MATnD,E,qDAwBf,IAAIK,EAAWC,KAAKZ,MAAMM,KACtBA,EAAO,kCAAkCK,EAAS,OAClDE,EAAgC,YAApBD,KAAKZ,MAAMO,KAC3B,OACI,sBAAKO,UAAU,cAAcC,YAAaH,KAAKX,WAAYe,aAAcJ,KAAKR,SAAUa,QAASL,KAAKX,WAAtG,UACI,qBAAKa,UAAWF,KAAKP,MAAMF,UAAY,WAAa,kBAApD,SACKQ,IAEL,qBAAKO,IAAKZ,EAAMQ,UAAU,YAC1B,qBAAKA,UAAU,gBAAf,SACI,wBACAA,UAAWD,EAAY,gBAAkB,cACzCI,QAASJ,EAAYD,KAAKJ,QAAUI,KAAKF,WAFzC,SAIKG,EAAY,IAAM,e,GAvCxBM,a,QCoEJC,E,kDAlEX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAQVqB,QAAU,WACN,IAAIC,EAAQ,EAAKjB,MAAMiB,MACvB,GAA+B,IAA5B,EAAKtB,MAAMsB,MAAMC,OACpB,GAAG,EAAKvB,MAAMsB,MAAMC,OAAS,EAAKC,aAC9B,EAAKtB,SAAS,CACVoB,MAAO,EAAKtB,MAAMsB,MAClBG,OAAQ,EAAKzB,MAAMyB,cAI3B,GAAG,EAAKzB,MAAM0B,cACV,EAAKxB,SAAS,CACVoB,MAAO,EAAKtB,MAAMsB,MAClBG,OAAQ,EAAKzB,MAAMyB,aAH3B,CAOA,IAAI,IAAIE,EAAI,EAAGA,EAAE,EAAKH,aAAcG,IAAI,CACpC,IAAIC,EAASC,KAAKC,MAAMD,KAAKD,SAAW,EAAK5B,MAAMsB,MAAMC,QACzD,EAAKQ,eACL,IAAIC,EAAa,EAAKhC,MAAMsB,MAAMM,GAClCN,EAAMW,KAAKD,GAEf,EAAK9B,SAAS,CACVoB,MAAOA,EACPG,OAAQ,EAAKzB,MAAMyB,WAhCvB,EAAKD,aAAe,GACpB,EAAKnB,MAAQ,CACTiB,MAAO,GACPG,OAAQ,IAEZ,EAAKM,aAAe,EAPL,E,qDAqCT,IAAD,OAIL,OAH+B,IAA5BnB,KAAKP,MAAMiB,MAAMC,QAAcX,KAAKS,UACpCT,KAAKP,MAAMoB,SAAWb,KAAKZ,MAAMyB,QAAQb,KAAKS,UAGzC,qBAAKa,GAAItB,KAAKZ,MAAMmC,KAAQrB,UAAU,0BAAtC,SACI,cAAC,IAAD,CACIA,UAAU,iBACVsB,WAAYxB,KAAKP,MAAMiB,MAAMC,OAC7Bc,SAAS,EACTC,KAAM1B,KAAKS,QACXkB,iBAAkB3B,KAAKZ,MAAMmC,KALjC,SAOKvB,KAAKP,MAAMiB,MAAMkB,KAAI,SAAClC,EAAKqB,GACxB,OAAO,cAAC,EAAD,CACHrB,KAAMA,EAENC,KAAM,EAAKP,MAAMO,KACjBC,QAAS,EAAKR,MAAMQ,QACpBE,WAAY,EAAKV,MAAMU,YAHlBiB,c,GAtDTR,aC6CbsB,E,kDA7CX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAKV0C,aAAe,SAACC,GACZ,EAAKzC,SAAS,CACV0C,cAAeD,EAAEE,OAAOC,MAAMC,iBANlC,EAAK1C,MAAQ,CACTuC,cAAc,IAHH,E,qDAaf,OACI,sBAAK9B,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,uBACIP,KAAK,OACLO,UAAU,oBACVkC,YAAY,YACZC,OAAQrC,KAAK8B,eAEjB,wBACI5B,UAAU,kBACVG,QAASL,KAAKZ,MAAMyB,OAAOhB,KAAKG,KAAKA,KAAKP,MAAMuC,eAFpD,+BAQR,cAAC,EAAD,CACIlB,eAAe,EACfD,OAAQb,KAAKZ,MAAMkD,WACnBf,KAAM,SACNb,MAAOV,KAAKZ,MAAMsB,MAClBd,QAASI,KAAKZ,MAAMQ,QACpBD,KAAMK,KAAKZ,MAAMO,KACjBG,WAAYE,KAAKZ,MAAMU,oB,GAvCpBS,aCqBRgC,E,kDApBX,WAAYnD,GAAQ,uCACVA,G,qDAGN,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,qBACA,cAAC,EAAD,CACIqB,KAAM,UACNV,OAAO,GACPH,MAAOV,KAAKZ,MAAMsB,MAClBd,QAASI,KAAKZ,MAAMQ,QACpBD,KAAMK,KAAKZ,MAAMO,KACjBG,WAAYE,KAAKZ,MAAMU,oB,GAdlBS,aCuBViC,E,kDAtBX,WAAYpD,GAAQ,uCACVA,G,qDAKN,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,wBACA,cAAC,EAAD,CACIqB,KAAM,aACNV,OAAO,GACPlB,KAAMK,KAAKZ,MAAMO,KACjBC,QAASI,KAAKZ,MAAMQ,QACpBc,MAAOV,KAAKZ,MAAMsB,MAClBZ,WAAYE,KAAKZ,MAAMU,oB,GAhBnBS,aCMlBkC,E,kDACJ,aAAe,IAAD,uBACZ,gBAeFC,SAhBc,sBAgBH,8BAAAC,EAAA,yDACLjC,EAAQ,GAGoB,KADhCkC,EAA0C,QADtCA,EAAoBC,aAAaC,QAAQ,cACI,GAAKC,KAAKC,MAAMJ,IAC5CjC,OAJZ,gBAKP,EAAKrB,SAAS,CACZoB,MAAOkC,EACPK,SAAQ,IAPH,uCAUOC,MAAM,6EAA6EC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAV5G,OAUP3C,EAVO,OAWPA,EAAQqC,KAAKC,MAAMtC,EAAM4C,OACzB,EAAKhE,SAAS,CACZoB,MAAOA,EACPuC,SAAQ,IAdH,yBAiBKC,MAAM,6EAA6EC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAjB1G,QAiBT3C,EAjBS,QAkBTA,EAAQqC,KAAKC,MAAMtC,EAAM4C,QAChB3C,OAASiC,EAAkBjC,SAClCkC,aAAaU,QAAQ,YAAYR,KAAKS,UAAU9C,IAChD+C,QAAQC,IAAI,YArBL,4CAhBG,EAwCdC,QAAU,SAACjE,EAAMqC,GACf,IAAIrB,EAAQ,EAAKjB,MAAMmE,WACpBlD,EAAMmD,SAASnE,KAClBgB,EAAMW,KAAK3B,GACXmD,aAAaU,QAAQ,aAAcR,KAAKS,UAAU9C,IAClD,EAAKpB,SAAS,CACZsE,WAAYlD,MA9CF,EAiDdZ,WAAa,SAACJ,GACZ,IAAIgB,EAAQ,EAAKjB,MAAMmE,WACnBE,EAAQpD,EAAMqD,QAAQrE,GAC1BgB,EAAMsD,OAAOF,EAAO,GACpBjB,aAAaU,QAAQ,aAAcR,KAAKS,UAAU9C,IAClD,EAAKpB,SAAS,CACZoB,MAAOA,KAvDG,EA0DdG,OAAS,SAACd,GAER,IADA,IAAIW,EAAQ,CAACX,GACJgB,EAAI,EAAGA,EAAI,IAAKA,IACvBL,EAAMW,KAAKtB,EAAWgB,GAExBL,EAAQA,EAAMuD,QAAO,SAAAvE,GAAI,OAAI,EAAKD,MAAMiB,MAAMmD,SAASnE,MACvD,EAAKJ,SAAS,CACZ4E,WAAYnE,EACZoE,YAAazD,KAlEH,EAqEd0D,gBAAkB,SAACN,GACjB,EAAKxE,SAAS,CACZ+E,UAAWP,KArEb,IAAIF,EAAoD,OAAvCf,aAAaC,QAAQ,cAAyB,GAAKC,KAAKC,MAAMH,aAAaC,QAAQ,eAFxF,OAGZ,EAAKrD,MAAQ,CACXwD,SAAQ,EACRvC,MAAO,GACP2D,UAAW,EACXT,WAAYA,EACZM,WAAY,GACZC,YAAa,IATH,E,gEAcZnE,KAAK0C,a,+BA6DL,IAAI4B,EAAW,gBACXC,EAAS,sBACTT,EAAQ9D,KAAKP,MAAM4E,UACvB,OACE,gCACE,sBAAKnE,UAAU,eAAf,UACE,wBAAQA,UAAqB,IAAV4D,EAAcS,EAASD,EAAUjE,QAASL,KAAKoE,gBAAgBvE,KAAKG,KAAM,GAA7F,sBACA,wBAAQE,UAAqB,IAAV4D,EAAcS,EAASD,EAAUjE,QAASL,KAAKoE,gBAAgBvE,KAAKG,KAAM,GAA7F,qBACA,wBAAQE,UAAqB,IAAV4D,EAAcS,EAASD,EAAUjE,QAASL,KAAKoE,gBAAgBvE,KAAKG,KAAM,GAA7F,2BAEDA,KAAKP,MAAMwD,QAAU,qBAAK/C,UAAU,mBAAf,wBAAoD,wBAC1E,eAAC,IAAD,CAAgB4D,MAAOA,EAAOU,cAAexE,KAAKoE,gBAAiBlE,UAAU,SAA7E,UACE,cAAC,EAAD,CAAUQ,MAAOV,KAAKP,MAAM0E,YAAatD,OAAQb,KAAKa,OAAQyB,WAAYtC,KAAKP,MAAMyE,WAAYtE,QAASI,KAAK2D,QAAShE,KAAK,YAC7H,cAAC,EAAD,CAAYe,MAAOV,KAAKP,MAAMiB,MAAOd,QAASI,KAAK2D,QAAShE,KAAK,YACjE,cAAC,EAAD,CAAWe,MAAOV,KAAKP,MAAMmE,WAAY9D,WAAYE,KAAKF,WAAYH,KAAK,yB,GA1FnEY,aAoGlBkE,IAASC,OAAO,cAAE,EAAF,IAAUC,SAASC,eAAe,W","file":"static/js/main.023ac779.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Skin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            skin : this.props.skin,\r\n            nameShown: false\r\n        }\r\n        if(this.props.type === \"gallery\"){\r\n            this.addSkin = this.props.addSkin.bind(this, this.state.skin)\r\n        }else{\r\n            this.removeSkin = this.props.removeSkin.bind(this, this.state.skin)\r\n        }\r\n\r\n    }\r\n    toggleName = () =>{\r\n        this.setState({\r\n            nameShown:true\r\n        })\r\n    }\r\n    hideName = () =>{\r\n        this.setState({\r\n            nameShown:false\r\n        })\r\n    }\r\n    render() {\r\n        let skinName = this.props.skin\r\n        let skin = \"https://gamedata.gota.io/skins/\"+skinName+\".png\"\r\n        let isGallery = this.props.type === \"gallery\"\r\n        return(\r\n            <div className=\"skinWrapper\" onMouseOver={this.toggleName} onMouseLeave={this.hideName} onClick={this.toggleName}>\r\n                <div className={this.state.nameShown ? \"skinText\" : \"skinText hidden\"}>\r\n                    {skinName}\r\n                </div>\r\n                <img src={skin} className=\"skinImg\"></img>\r\n                <div className=\"buttonsHolder\">\r\n                    <button \r\n                    className={isGallery ? \"skinBtn green\" : \"skinBtn red\"} \r\n                    onClick={isGallery ? this.addSkin : this.removeSkin}\r\n                    >\r\n                        {isGallery ? \"+\" : \"-\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skin","import React, { Component } from 'react'\r\nimport Skin from \"./skin\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nclass SkinContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.skinsPerPage = 20\r\n        this.state = {\r\n            skins: [],\r\n            search: \"\"\r\n        }\r\n        this.currentIndex = 0\r\n    }\r\n    getPage = () => {\r\n        let skins = this.state.skins\r\n        if(this.props.skins.length === 0) return\r\n        if(this.props.skins.length < this.skinsPerPage){\r\n            this.setState({\r\n                skins: this.props.skins,\r\n                search: this.props.search\r\n            })\r\n            return\r\n        }\r\n        if(this.props.dontRandomize){\r\n            this.setState({\r\n                skins: this.props.skins,\r\n                search: this.props.search\r\n            })\r\n            return\r\n        }\r\n        for(let i = 0; i<this.skinsPerPage; i++){\r\n            let random = Math.floor(Math.random() * this.props.skins.length)\r\n            this.currentIndex++\r\n            let randomSkin = this.props.skins[random]\r\n            skins.push(randomSkin)\r\n        }\r\n        this.setState({\r\n            skins: skins,\r\n            search: this.props.search\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.skins.length === 0) this.getPage()\r\n        if(this.state.search !== this.props.search) this.getPage()\r\n\r\n        return(\r\n                <div id={this.props.elId}   className=\"skinsHolder  scroll-bar\">\r\n                    <InfiniteScroll\r\n                        className=\"infiniteScroll\"\r\n                        dataLength={this.state.skins.length}\r\n                        hasMore={true}\r\n                        next={this.getPage}\r\n                        scrollableTarget={this.props.elId}\r\n                    >\r\n                        {this.state.skins.map((skin,i) => {\r\n                            return <Skin \r\n                                skin={skin}\r\n                                key={i}\r\n                                type={this.props.type}\r\n                                addSkin={this.props.addSkin}\r\n                                removeSkin={this.props.removeSkin}\r\n                            />\r\n\r\n                        })}\r\n                    </InfiniteScroll>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkinContainer","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentSearch:\"\"\r\n        }\r\n    }\r\n    updateSeries = (e) => {\r\n        this.setState({\r\n            currentSearch: e.target.value.toLowerCase()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"series\">\r\n                    <div className=\"searchRow\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"searchInput wm-L1\" \r\n                            placeholder=\"Skin name\" \r\n                            onBlur={this.updateSeries}\r\n                        />\r\n                        <button \r\n                            className=\"searchBtn wm-L1\"\r\n                            onClick={this.props.search.bind(this,this.state.currentSearch)}\r\n                        >\r\n                            🔍\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <SkinContainer\r\n                    dontRandomize={true}\r\n                    search={this.props.searchName}\r\n                    elId={\"search\"} \r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass SecondPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"title\">Gallery</div>\r\n                <SkinContainer \r\n                    elId={\"gallery\"} \r\n                    search=\"\"\r\n                    skins={this.props.skins}\r\n                    addSkin={this.props.addSkin}\r\n                    type={this.props.type}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondPage","import React, { Component } from 'react'\r\nimport SkinContainer from \"./SkinContainer\";\r\nclass ThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"view\">\r\n                <div className=\"title\">Your skins</div>\r\n                <SkinContainer \r\n                    elId={\"savedSkins\"}\r\n                    search=\"\" \r\n                    type={this.props.type}\r\n                    addSkin={this.props.addSkin}\r\n                    skins={this.props.skins}\r\n                    removeSkin={this.props.removeSkin}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThirdPage","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport './specy.css';\nimport './index.css';\nimport Mainpage from './Components/mainPage'\nimport SecondPage from './Components/secondPage'\nimport ThirdPage from './Components/thirdPage'\nclass App extends Component {\n  constructor() {\n    super()\n    let savedSkins = localStorage.getItem(\"savedSkins\") === null ? [] : JSON.parse(localStorage.getItem(\"savedSkins\"))\n    this.state = {\n      loading:true,\n      skins: [],\n      pageIndex: 0,\n      savedSkins: savedSkins,\n      searchSkin: \"\",\n      searchSkins: []\n    }\n    \n  }\n  componentDidMount() {\n    this.getSkins()\n  }\n  getSkins = async () => {\n    let skins = []\n    let localStorageSkins = localStorage.getItem(\"gameSkins\")\n    localStorageSkins = localStorageSkins === null ? [] : JSON.parse(localStorageSkins)\n    if(localStorageSkins.length !== 0){\n      this.setState({\n        skins: localStorageSkins,\n        loading:false\n      })\n    }else{\n      skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n      skins = JSON.parse(skins.names)\n      this.setState({\n        skins: skins,\n        loading:false\n      })\n    }\n    skins = await fetch(\"https://cors-anywhere.herokuapp.com/https://gamedata.gota.io/skinData.php\").then(data => data.json())\n    skins = JSON.parse(skins.names)\n    if(skins.length > localStorageSkins.length){\n      localStorage.setItem(\"gameSkins\",JSON.stringify(skins))\n      console.log(\"updated\")\n    }\n  }\n  addskin = (skin, e) => {\n    let skins = this.state.savedSkins\n    if(skins.includes(skin)) return\n    skins.push(skin)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      savedSkins: skins\n    })\n  }\n  removeSkin = (skin) => {\n    let skins = this.state.savedSkins\n    let index = skins.indexOf(skin)\n    skins.splice(index, 1)\n    localStorage.setItem(\"savedSkins\", JSON.stringify(skins))\n    this.setState({\n      skins: skins\n    })\n  }\n  search = (skinName) => {\n    let skins = [skinName]\n    for (let i = 1; i < 500; i++) {\n      skins.push(skinName + i)\n    }\n    skins = skins.filter(skin => this.state.skins.includes(skin))\n    this.setState({\n      searchSkin: skinName,\n      searchSkins: skins\n    })\n  }\n  changePageIndex = (index) => {\n    this.setState({\n      pageIndex: index,\n    });\n  };\n  render() {\n    let navClass = \"navItem dm-L1\"\n    let selNav = \"navItem selectedTab\"\n    let index = this.state.pageIndex\n    return (\n      <div>\n        <div className=\"navbar dm-L3\">\n          <button className={index === 0 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 0)}>Discover</button>\n          <button className={index === 1 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 1)}>Gallery</button>\n          <button className={index === 2 ? selNav : navClass} onClick={this.changePageIndex.bind(this, 2)}>Your skins</button>\n        </div>\n        {this.state.loading ? <div className=\"title text-white\">Loading...</div>: <div></div>}\n        <SwipeableViews index={index} onChangeIndex={this.changePageIndex} className=\"slider\">\n          <Mainpage skins={this.state.searchSkins} search={this.search} searchName={this.state.searchSkin} addSkin={this.addskin} type=\"gallery\" />\n          <SecondPage skins={this.state.skins} addSkin={this.addskin} type=\"gallery\" />\n          <ThirdPage skins={this.state.savedSkins} removeSkin={this.removeSkin} type=\"savedSkins\" />\n        </SwipeableViews>\n      </div>\n\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(< App />, document.getElementById(\"root\"));"],"sourceRoot":""}